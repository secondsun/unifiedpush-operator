apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: unifiedpushservers.push.aerogear.org
spec:
  group: push.aerogear.org
  names:
    kind: UnifiedPushServer
    listKind: UnifiedPushServerList
    plural: unifiedpushservers
    shortNames:
    - ups
    singular: unifiedpushserver
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: UnifiedPushServer is the Schema for the unifiedpushservers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: UnifiedPushServerSpec defines the desired state of UnifiedPushServer
          properties:
            backups:
              description: Backups is an array of configs that will be used to create
                CronJob resource instances
              items:
                description: Backup contains the info needed to configure a CronJob
                  for backups
                properties:
                  backendSecretName:
                    description: BackendSecretName is the name of a secret containing
                      storage backend details, such as "AWS_S3_BUCKET_NAME", "AWS_ACCESS_KEY_ID",
                      and "AWS_SECRET_ACCESS_KEY"
                    type: string
                  backendSecretNamespace:
                    description: BackendSecretNamespace is the name of the namespace
                      that the secret referenced in BackendSecretName resides in
                    type: string
                  encryptionKeySecretName:
                    description: EncryptionKeySecretName is the name of a secret containing
                      PGP/GPG details, including "GPG_PUBLIC_KEY", "GPG_TRUST_MODEL",
                      and "GPG_RECIPIENT"
                    type: string
                  encryptionKeySecretNamespace:
                    description: EncryptionKeySecretNamespace is the name of the namespace
                      that the secret referenced in EncryptionKeySecretName resides
                      in
                    type: string
                  name:
                    description: Name is the name that will be given to the resulting
                      CronJob
                    type: string
                  schedule:
                    description: Schedule is the schedule that the job will be run
                      at, in cron format
                    type: string
                required:
                - backendSecretName
                - name
                - schedule
                type: object
              type: array
            database:
              description: UnifiedPushServerDatabase contains the data needed to connect
                to external database
              properties:
                host:
                  description: Host for external database support
                  type: string
                name:
                  description: Name for external database support
                  type: string
                password:
                  description: Password for external database support
                  type: string
                port:
                  anyOf:
                  - type: string
                  - type: integer
                  description: Port for external database support
                user:
                  description: User for external database support
                  type: string
              type: object
            externalDB:
              description: ExternalDB can be set to true to use details from Database
                and connect to external db
              type: boolean
            oAuthResourceRequirements:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  additionalProperties:
                    type: string
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    type: string
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            postgresPVCSize:
              description: PVC size for Postgres service
              type: string
            postgresResourceRequirements:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  additionalProperties:
                    type: string
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    type: string
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            unifiedPushResourceRequirements:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  additionalProperties:
                    type: string
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    type: string
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            useMessageBroker:
              description: UseMessageBroker can be set to true to use managed queues,
                if you are using enmasse. Defaults to false.
              type: boolean
          type: object
        status:
          description: UnifiedPushServerStatus defines the observed state of UnifiedPushServer
          properties:
            message:
              description: Message is a more human-readable message indicating details
                about current phase or error.
              type: string
            phase:
              description: Phase indicates whether the CR is reconciling(good), failing(bad),
                or initializing.
              type: string
            ready:
              description: Ready is True if all resources are in a ready state and
                all work is done (phase should be "reconciling"). The type in the
                Go code here is deliberately a pointer so that we can distinguish
                between false and "not set", since it's an optional field.
              type: boolean
            secondaryResources:
              additionalProperties:
                items:
                  type: string
                type: array
              description: 'SecondaryResources is a map of all the secondary resources
                types and names created for this CR.  e.g "Deployment": [ "DeploymentName1",
                "DeploymentName2" ]'
              type: object
          required:
          - phase
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
